version: "3"

services:
  traefik-service:
    image: traefik:v2.3
    ports:
      # listen on port 80, default for http. necessary to redirect to https
      - 80:80
      # listen on port 443, default for https.
      - 443:443
    volumes:
      # add docker as mounted volume, so that traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro

      # mount the volume to store the certificates
      - traefik-public-certificates:/certificates
    labels:
      # Enable traefik for this service, to make it available in the public network
      - traefik.enable=true
      # define the port inside of the docker service to use
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      # make traefik use this domain in http
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=HOST(`subdomain.yourdomain.com`)
      # use the traefik-public network
      - traefik.docker.network=traefik-public
      # traefik-https the actual router using https
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=HOST(`subdomain.yourdomain.com`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      # use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
      # use the special traefik service api@internal with the web UI/Dashboard
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      # https-redirect middleware to redirect http to https
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # middleware to redirect http to https
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
      # admin-auth middleware with http basic auth
      # using the environment variables USERNAME and HASHED_PASSWORD
      - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?variable not set}:{HASHED_PASSWORD?variable not set}
      # enable http basic auth, using the middleware created above
      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth

    command:
      # enable docker in traefik, so that it reads labels form docker services
      - --providers.docker
      # donot expose all dokcer services, only the ones explicitly expose
      - --providers.docker.exposedbydefault=false
      # create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80

      # HTTPS
      # create an entrypoint "https" listening on port 443
      - --entrypoints.https.address=:443
      # create the certificates resolver "le" for let's encrypt. uses the environment variable EMAIL
      - --certificatesresolvers.le.acme.email=youremail@mail.com
      # store the let's encrypt certificates in the mounted volume
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      # use the tls challenge to lets encrypt
      - --certificatesresolvers.le.acme.tlschallenge=true

      # enable the access log, with http requests
      - --accesslog
      #   enable the trafik log, for configurations and errors
      - --log

      # Enable the DASHBOARD  and API
      - --api
    networks:
      - traefik-public
    restart: always

volumes:
  #  create a volume to store the certificates
  #  so that traefik always starts with the same volume containing our https certificates
  traefik-public-certificates:

networks:
  traefik-public:
    external: true
#
#
#
#
#
# running this file will throw error since we donot have USERNAME and HASHED_PASSWORD variable not set
# go inside folder containing this docker-compose files and execute the following commands in terminal
# RUN THE FOLLOWING TO SET USERNAME AND HASHED_PASSWORD variable
# export USERNAME=admin
# export PASSWORD=yourpassword
# openssl passwd -apr1 $PASSWORD => generates hashed value of your password
# export HASHED_PASSWORD=$(openssl passwd -apr1 $PASSWORD)
#
#
#
#
#
